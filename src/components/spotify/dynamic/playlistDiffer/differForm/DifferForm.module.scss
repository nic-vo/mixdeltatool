@use '@styles/globals.module.scss' as g;

.heading {
	font-size: 2rem;
	text-align: center;
}

@keyframes fadeIn {
	0% {
		opacity: 0%
	}

	100% {
		opacity: 100%
	}
}

.form {
	display: flex;
	gap: 2svh;
	flex-direction: column;
	align-items: center;
	padding: 1rem;
	background-color: rgba(50, 50, 50, 0.4);
	width: 100%;
	align-self: center;
	justify-self: center;
	max-width: 600px;
	border-radius: 20px;
	overflow-y: auto;
	animation-name: fadeIn;
	animation-duration: g.$easeLength;
	animation-timing-function: ease;

	label:not(.label) {
		cursor: pointer;
		display: flex;
		gap: 1rem;
		font-size: 1.4rem;
	}
}

.label {
	display: grid;
	grid-template-rows: [text] auto [select] auto;
	font-size: 1.4rem;
	gap: 0.5em;
	width: 100%;
	font-weight: bold;

	:not(input, select, textarea) {
		grid-row: text;
	}

	textarea,
	input {
		resize: none;
		color: g.$black;
		padding: 0.5em;
		cursor: text;
	}

	textarea {
		height: 8em;
	}
}

.select {
	cursor: pointer;
}

.select,
.label input[type='text'],
.label textarea {
	grid-row: select;
	flex-shrink: 1;
	width: 100%;
	background-color: transparent;
	color: g.$white;
	padding: 0.5em;
	transition: color 0.1s;
	font-size: 1rem;
	font-weight: normal;
	border-radius: 20px;

	optgroup {
		color: g.$white;
		background-color: g.$black;
	}

	option {
		color: g.$white;
		background-color: g.$black;
	}
}

.select:hover,
.select:focus {
	background-color: g.$white;
	color: g.$black;
}

.previewContainer {
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: flex-start;
	gap: 1rem;
	width: 100%;
}

.warningDiv {
	display: flex;
	flex-direction: column;
	align-items: center;
	align-self: center;
	gap: 1em;
	margin-bottom: 1rem;
}

.warning {
	display: flex;
	align-items: center;
	color: #F79824;

	* {
		color: #F79824
	}

	svg {
		flex-shrink: 0;
		margin-right: 1em
	}
}

.stageControls {
	display: flex;
	width: 100%;
	height: 100%;
	justify-content: space-between;
	gap: min(1rem, 2vmin);
	align-items: center;
	border-bottom: 1px solid g.$white;
	padding-bottom: 1rem;

	button:not(.progressSeg) {
		display: none;
	}
}

@media (min-aspect-ratio: 0.75) {
	.stageControls {
		button:not(.progressSeg) {
			display: block;
		}
	}
}

.progressBar {
	flex-grow: 1;
	display: flex;
	align-items: center;
	gap: 5px;
	width: 100%;
}

.progressSeg {
	cursor: pointer;
	align-self: stretch;
	width: 33%;
	border-radius: g.$rounded;
	border: 4px solid g.$black;
	transition: border-color g.$easeLength, background-color g.$easeLength;
	color: g.$white;
	overflow: hidden;
	padding: 0.5rem 0;
}


.playlist {
	color: g.$black;
	background-color: g.$teal;
	border-color: g.$teal;
}

.album {
	color: g.$black;
	background-color: g.$orange;
	border-color: g.$orange;
}

.missing {
	background-color: transparent;
	border-color: g.$pinkred;
}

.current {
	border-color: g.$white;
	opacity: 1;
}

.emptyItem {
	width: 100%;
	background-color: rgba(40, 40, 60, 0.7);
	display: flex;
	justify-content: center;
	align-items: center;
	min-height: 10ch;
	border-radius: 20px;

	p {
		color: rgba(100, 100, 100, 1);
		font-style: italic;
	}
}

@media (min-aspect-ratio: 1) {
	.emptyItem {
		min-height: 20ch;
	}
}

.caveat {
	display: flex;
	align-items: center;
	gap: 0.5em;
	border-radius: g.$rounded;
	padding: 0.5em;
	background-color: g.$whiteorange;
	color: g.$black;

	svg {
		flex-shrink: 0;
		* {
			color: g.$pinkred
		}
	}
}
