@use '@styles/globals.module.scss' as g;
@use '../Router.module.scss' as p;

.container {
	@include g.flexCenter;
	flex-direction: column;
	justify-content: flex-start;
	overflow-y: auto;
	width: 100%;
	max-width: 800px;
	height: 80%;
	padding: 0;
	justify-self: baseline;
	gap: 0.5rem;
}

@media(min-aspect-ratio:1.25) {
	.container {
		max-width: 1000px;
	}
}

.heading {
	text-align: center;
	grid-row: heading;
	grid-column: notList;
	font-size: 2.2rem;
}

.router {
	@include g.flexCenter;
	grid-row: router;
	grid-column: notList;
	align-self: center;
	justify-self: end;
	align-items: center;
	max-width: 100%;
	margin: 0;
}

.controls {
	grid-row: controls;
	grid-column: notList;
	width: 100%;
	align-self: baseline;
	justify-self: end;
	display: flex;
	flex-direction: column;
	gap: 0.2em;
}

.list {
	grid-column: list;
	grid-row: listStart/span 4;
	height: 100%;
	@include g.flexCenter;
	flex-direction: column;
	gap: 1rem;
	overflow: hidden;
	width: 100%;
}

@media (min-aspect-ratio: 1) {
	.container {
		display: grid;
		grid-template-rows: [listStart heading] 1fr [router] 1fr [controls] 1fr 5fr [listEnd] 1fr;
		grid-template-columns: [notList] 40ch [list] 2fr;
		padding: 1rem;
		gap: 0;
		column-gap: 1rem;
	}

	.heading {
		text-align: right;
		justify-self: last baseline;
		align-self: last baseline;
	}

	.list {
		justify-self: start;
	}
}

$routerBorderWidth: 2px;

.button {
	@include p.sliderButton;
	font-size: 1.6rem;
	border: $routerBorderWidth solid g.$orange;
}

.button:hover,
.button:focus,
.button:active {
	background-color: g.$white;
	color: g.$black;
}

.leftButton {
	border-top-left-radius: g.$rounded;
	border-bottom-left-radius: g.$rounded;
	border-right-width: calc(0.5 * $routerBorderWidth);
	border-right-width: 0;
}

.rightButton {
	border-top-right-radius: g.$rounded;
	border-bottom-right-radius: g.$rounded;
	border-left-width: calc(0.5*$routerBorderWidth);
	border-left-width: 0;
}

.active,
.active:focus,
.active:hover,
.active:active {
	background-color: g.$orange;
	color: g.$white;
}
